(()=>{"use strict";class e{constructor(e,t,s,i,n,o,r){this._name=e.name,this._link=e.link,this._likeNumber=e.likes,this._userId=t._id,this._ownerId=e.owner._id,this._cardId=e._id,this._templateSelector=s,this._clickImageHandle=i,this._deleteCard=n,this._likeCard=o,this._dislikeCard=r}generateCard=()=>(this._cardElement=document.querySelector(this._templateSelector).content.cloneNode(!0),this._like=this._cardElement.querySelector(".element__like-photo"),this._likeNumberElement=this._cardElement.querySelector(".element__like-number"),this._title=this._cardElement.querySelector(".element__title"),this._image=this._cardElement.querySelector(".element__img"),this._delete=this._cardElement.querySelector(".element__delete-card"),this._fillCard(),this._setEventHandlers(),this._cardElement);_addLikeCard=()=>{this._likeCard(this,this._cardId)};likeElement(e){this._likeNumberElement.textContent=e.likes.length,this._likeNumber=e.likes,this._like.classList.add("element__like-photo_active")}_removeLikeCard=()=>{this._dislikeCard(this,this._cardId)};dislikeElement(e){this._like.classList.remove("element__like-photo_active"),this._likeNumberElement.textContent=e.likes.length,this._likeNumber=e.likes}_isLike=()=>this._likeNumber.find((e=>e._id===this._userId));_isYouCard(){return this._ownerId===this._userId}_likeCardForUser(){this._isLike()?this._removeLikeCard():this._addLikeCard()}deleteCardElement(){this._delete.closest(".element").remove()}_setEventHandlers=()=>{this._delete.addEventListener("click",(()=>this._deleteCard(this,this._cardId))),this._like.addEventListener("click",(()=>this._likeCardForUser())),this._image.addEventListener("click",(()=>this._clickImageHandle(this._name,this._link)))};_fillCard=()=>{this._isLike()?this._like.classList.add("element__like-photo_active"):this._like.classList.remove("element__like-photo_active"),!1===this._isYouCard()&&this._cardElement.getElementById("element__delete-card").remove(),this._likeNumberElement.textContent=this._likeNumber.length,this._image.src=this._link,this._image.alt=this._name,this._title.textContent=this._name}}const t={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button-save",inactiveButtonClass:"popup__button-save_disabled",activeButtonClass:"popup__button-save_active",inputErrorClass:"popup__input_type_error",errorClass:"error"};class s{constructor(e,t){this._formElement=e,this._validationConfig=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector)),this._buttonElement=this._formElement.querySelector(this._validationConfig.submitButtonSelector)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_showInputError=e=>{const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._validationConfig.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._validationConfig.errorClass)};_hideInputError=e=>{const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._validationConfig.inputErrorClass),t.classList.remove(this._validationConfig.errorClass),t.textContent=""};_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.remove(this._validationConfig.activeButtonClass),this._buttonElement.classList.add(this._validationConfig.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._validationConfig.inactiveButtonClass),this._buttonElement.classList.add(this._validationConfig.activeButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}}class i{constructor({items:e,renderer:t},s){this._renderedArray=e,this._renderer=t,this._container=document.querySelector(s)}renderItems(){this._renderedArray.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}}class n{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.code&&this.close()}_handleOverlayClose(e){e.currentTarget===e.target&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close").addEventListener("click",(()=>this.close())),this._popup.addEventListener("mousedown",(e=>this._handleOverlayClose(e)))}}class o extends n{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._inputList=Array.from(this._form.querySelectorAll(".popup__input")),this._buttonSave=this._popup.querySelector(".popup__button-save"),this._buttonSaveEnit=this._buttonSave.textContent}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}renameButtonSave(){this._buttonSave.textContent="Сохранение..."}close(){super.close(),this._form.reset(),this._buttonSave.textContent=this._buttonSaveEnit}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const r=document.querySelector(".popup_type_edit-profile"),a=r.querySelector(".popup__input_type_name"),l=r.querySelector(".popup__input_type_job"),_=document.querySelector(".popup_type_add-card"),h=document.querySelector(".popup_type_edit-avatar"),d=r.querySelector("#editForm"),c=_.querySelector("#addForm"),p=h.querySelector("#editAvatar"),u=document.querySelector(".profile__edit-profile"),m=document.querySelector(".profile__add-button"),v=document.querySelector(".profile__edit-avatar"),f=new class{constructor(e){this._options=e}_getResponseData(e){return e.ok?e.json():Promise.reject(`Ошибка: ${e.status}`)}getUserInfo(){return fetch(this._options.baseUrl+"/users/me",{headers:this._options.headers}).then((e=>this._getResponseData(e)))}getInitialCards(){return fetch(this._options.baseUrl+"/cards",{headers:this._options.headers}).then((e=>this._getResponseData(e)))}setEditUserInfo(e){return fetch(this._options.baseUrl+"/users/me",{method:"PATCH",headers:this._options.headers,body:JSON.stringify({name:e.nameInput,about:e.jobInput})}).then((e=>this._getResponseData(e)))}setNewCard(e){return fetch(this._options.baseUrl+"/cards",{method:"POST",headers:this._options.headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>this._getResponseData(e)))}addLike(e){return fetch(this._options.baseUrl+"/cards/"+e+"/likes",{method:"PUT",headers:this._options.headers}).then((e=>this._getResponseData(e)))}deleeteLike(e){return fetch(this._options.baseUrl+"/cards/"+e+"/likes",{method:"DELETE",headers:this._options.headers}).then((e=>this._getResponseData(e)))}deleeteCardMetod(e){return fetch(this._options.baseUrl+"/cards/"+e,{method:"DELETE",headers:this._options.headers}).then((e=>this._getResponseData(e)))}setEditAvatar(e){return fetch(this._options.baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._options.headers,body:JSON.stringify({avatar:e.AvatarInput})}).then((e=>this._getResponseData(e)))}}({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{authorization:"dcf4edee-ca14-49b3-93d1-3710d22ba9f3","Content-Type":"application/json"}}),E=new s(d,t);E.enableValidation();const g=new s(c,t);g.enableValidation();const C=new s(p,t);let k;C.enableValidation();const y=new class extends n{constructor(e){super(e),this._popupImageImg=this._popup.querySelector(".popup__img"),this._popupImageTitle=this._popup.querySelector(".popup__img-title")}open(e,t){super.open(),this._popupImageImg.src=t,this._popupImageImg.alt=e,this._popupImageTitle.textContent=e}close(){super.close(),this._popupImageImg.src="",this._popupImageImg.alt="",this._popupImageTitle.textContent=""}}(".popup_type_img");y.setEventListeners();const b=new class{constructor({name:e,info:t,avatar:s}){this._name=document.querySelector(e),this._info=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{user:this._name.textContent,info:this._info.textContent,_id:this._id,avatar:this._avatar.src}}setUserInfo(e,t,s,i){this._id=s,this._name.textContent=e,this._info.textContent=t,this._avatar.src=i}setUserAvatar(e){this._avatar.src=e}}({name:".profile__name",info:".profile__job",avatar:".profile__avatar"});f.getUserInfo().then((e=>{console.log(e),b.setUserInfo(e.name,e.about,e._id,e.avatar),b.setUserAvatar(e.avatar)})).catch((e=>{console.log(e)})),f.getInitialCards().then((e=>{console.log(e),k=new i({items:e.reverse(),renderer:U},".elements"),k.renderItems()})).catch((e=>{console.log(e)}));const I=new class extends n{constructor(e){super(e),this._button=this._popup.querySelector(".popup__button-save")}open(e){super.open(),this._handleSubmit=e}setEventListeners(){super.setEventListeners(),this._button.addEventListener("click",(e=>{e.preventDefault(),this._handleSubmit()}))}}(".popup_type_delete");I.setEventListeners();const S=new o(".popup_type_edit-profile",(function(e){const{_id:t,avatar:s}=b.getUserInfo();S.renameButtonSave(),f.setEditUserInfo(e).then((()=>{b.setUserInfo(e.nameInput,e.jobInput,t,s)})).catch((e=>{console.log(e)})).finally((()=>{S.close()}))}));S.setEventListeners(),u.addEventListener("click",(()=>{const{info:e,user:t}=b.getUserInfo();a.value=t,l.value=e,E.resetValidation(),S.open()}));const L=new o(".popup_type_edit-avatar",(function(e){L.renameButtonSave(),f.setEditAvatar(e).then((()=>{b.setUserAvatar(e.AvatarInput)})).catch((e=>{console.log(e)})).finally((()=>{L.close()}))}));L.setEventListeners(),v.addEventListener("click",(()=>{C.resetValidation(),L.open()}));const q=new o(".popup_type_add-card",(function(e){const t=e.imgInput,s=e.linkInput;q.renameButtonSave(),f.setNewCard({name:t,link:s}).then((e=>{const t=U(e);k.addItem(t)})).catch((e=>{console.log(e)})).finally((()=>{q.close()}))}));function U(t){return new e(t,b.getUserInfo(),".element-template",A,w,x,B).generateCard()}function w(e,t){I.open((()=>{f.deleeteCardMetod(t).then((()=>{e.deleteCardElement(),I.close()})).catch((e=>{console.log(e)}))}))}function x(e,t){f.addLike(t).then((t=>{e.likeElement(t)})).catch((e=>{console.log(e)}))}function B(e,t){f.deleeteLike(t).then((t=>{e.dislikeElement(t)})).catch((e=>{console.log(e)}))}function A(e,t){y.open(e,t)}q.setEventListeners(),m.addEventListener("click",(()=>{g.resetValidation(),q.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,